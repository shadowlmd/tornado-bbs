═════════════════════════════════════════════════════════════════════════════

          █▀▀█▀▀█ █▀▀▀▀█▄ ▀█▀▀▀█▄ ▀█▄   ▀█ ▀█▀█▄  ▀█▀▀█▄  █▀▀▀▀█▄
             █    █     █  █    █  █▀█   █  █  ▀█  █   ▀█ █     █
             █    █     █ ▄█▄▄▄█▀  █ ▀█  █ ▀█▀▀▀█  █    █ █     █
             █    █     █  █   ▀█  █  ▀█ █  █   █  █   ▄█ █     █
            ▄█▄   ▀█▄▄▄▄█ ▄█   ▄█ ▄█   ▀██ ▄█  ▄█ ▄█▄▄█▀  ▀█▄▄▄▄█

─────────────────────────────────────────────────────────────────────────────

                      Tornado Bulletin Board System
     Copyright (c) 1995-98 Konstantin Klyagin [2:461/22] & Tornado Team.

═════════════════════════════════════════════════════════════════════════════

    Оглавление                                 Feci quod potui, faciant
    ══════════                                 meliora potentes.

    1. История создания ............................................ XX
    2. Возможности и особенности программы ......................... XX
    3. О данном документе .......................................... XX
    4. Требования к техническим и программым средствам ............. XX
        4.1. Требования к техническим средствам .................... XX
        4.2. Требования к программным средствам .................... XX
        4.3. Дополнительные технические и программные средства ..... XX
    5. Интерфейс пользователя ...................................... XX
        5.1. Режим ожидания звонка ................................. XX
        5.2. Режим работы пользователя ............................. XX
        5.3. Настройка цветов ...................................... XX
    6. Рабочий цикл Tornado ........................................ XX
        6.1. Параметры командной строки ............................ XX
        6.2. Коды выхода (errorlevels) ............................. XX
        6.3. Файлы-флажки .......................................... XX
    7. Настройка программы ......................................... XX
        7.1. Коды задания цвета текста ............................. XX
        7.2. Макросы ............................................... XX
        7.3. Задание интервалов времени ............................ XX
        7.4. .A?? файлы ............................................ XX
        7.5. Уровни доступа и пользовательские флажки .............. XX
        7.6. Настройка языков сообщений ............................ XX
        7.7. Конфигурация пользовательских меню .................... XX
        7.8. Конфигурация протоколов пересылки файлов .............. XX
        7.9. Запуск BBS из-под мейлера ............................. XX
          7.9.1. Tornado/DOS (версия для DOS) ...................... XX
          7.9.2. Tornado/2 (версия для OS/2) ....................... XX
          7.9.3. Tornado/W32 (версия для Win95/98/NT) .............. XX
       7.10. Пара слов о многолинейном режиме работы ............... XX
       7.11. Файловые и почтовые области ........................... XX
       7.12. Группы файловых и почтовых областей ................... XX
       7.13. Система новостей ...................................... XX
    8. Встроенный язык написания сценариев ......................... XX
        8.1. Секции ................................................ XX
        8.2. Переменные ............................................ XX
        8.3. Команды ............................................... XX
        8.4. Метки ................................................. XX
        8.5. Подпрограммы .......................................... XX
        8.6. Зарезервированные имена файлов-сценариев .............. XX
        8.7. Поддержка REXX (только в версии под OS/2) ............. XX
    9. Дополнительные возможности .................................. XX
        9.1. Встроенный DoorWay .................................... XX
        9.2. ManualSend (tm) ....................................... XX
        9.3. SaveTagList (tm) ...................................... XX
        9.4. Tornado upgrade manager (tm) .......................... XX
        9.5. Registration Resume (tm) .............................. XX
        9.6. Private uploads (tm) .................................. XX
   10. Заключение .................................................. XX
        10.1. Благодарности ........................................ XX
        10.2. Условия распространения и ответственность автора ..... XX
        10.3. Поддержка программы .................................. XX
        10.4. Автор ................................................ XX
        10.5. Торговые марки ....................................... XX


 1. История создания
 ═══════════════════

    Tornado - программа для организации BBS (Bulletin Board System, что
 в переводе означает "электронная доска объявлений"). Существует  много
 подобных программ, из которых  наиболее  распространены  RemoteAccess,
 Maximus, PCBoard, SuperBBS, и др... Hо свое - всегда интересно. И вот,
 имея свою собственную BBS и вдаваясь в особенности установки  и  наст-
 ройки подобных программ, я начал замечать некоторые связанные  с  этим
 неудобства... И у меня появилась идея - написать свою BBS. А случилось
 это 26 июля 1995 г. Как раз в этот день я в интегрированной среде  чу-
 десного продукта фирмы Borland Inc.  Borland Pascal  7.0  создал  файл
 tornado.pas. Tornado - попытка (удачная или нет - судите сами ;) объе-
 динить достоинства существующих ее аналогов, украсив своими особеннос-
 тями и, естественно, багами (а их в данной версии, поверьте,  преддос-
 таточно).  Упор сделан на удобство работы, увеличение количества  воз-
 можностей, уменьшение количества ошибок ...


 2. Возможности и особенности программы
 ══════════════════════════════════════

   - Текстовые файлы конфигурации;
   - Внутренняя поддержка эмуляций терминалов ANSI, TTY и AVATAR;
   - Встроенные протоколы передачи файлов XModem, XModemCRC, XModem1K,
     XModem1KG, YModem, YModemG и ZModem;
   - Встроенный язык программирования, на котором можно написать весьма
     специфичные вещи для BBS;
   - Настраиваемые языки сообщений;
   - Возможность задания устройства ввода-вывода,  посредством которого
     осуществляется работа с портом (UART, FOSSIL, DigiBoard, Int 14h);
   - Встроенное подобие DoorWay, который позволяет без установки допол-
     нительного ПО получить удаленный доступ к системе;
   - Поддержка файловых и почтовых областей, а также их групп;
   - Поддержка протокола IEMSI;
   - SaveTagList (tm). Сохранение списка помеченных для скачивания фай-
     лов после hang-up'а пользователя;
   - Registration Resume (tm). Если  связь  была  потеряна во время ре-
     гистрации пользователя, то при последующем входе она не начинается
     заново, а продолжается с прерванной позиции;
   - Tornado upgrade manager (tm). Возможность автоматического поднятия
     уровня доступа  пользователю, если им было  совершено определенное
     количество звонков на BBS; при этом Tornado upgrade  manager может
     показать/поместить в почтовую область файл с уведомлением;
   - Работа под многозадачными операционными системами;
   - Локальный режим работы;
   - Локальный UpLoad/DownLoad;
   - Поддержка баз сообщений формата *.MSG, Hudson, Squish и JAM;
   - Ведение файла-протокола (log-файла),  отображающего  все  события,
     происходящие на станции;
   - Пользовательские меню любой вложенности;
   - Удобный турбоинтерфейс СисОпа;
   - Возможность работы в многолинейном режиме;
   - Tornado Relay Chat: конфереренция реального  времени в многолиней-
     ном режиме работы;
   - Просмотр архивных файлов пользователем;
   - Поддержка форматов drop-файлов EXITINFO.BBS, DOOR.SYS и DORINFO.DEF;
   - Различные мелкие вещи, делающие  приятной  работу с программой как
     СисОпу, так и пользователю.


 3. О данном документе
 ═════════════════════

    При создании данной  документации я решил несколько отойти от обще-
 принятых правил написания  подобных документов, которые имеют в качес-
 тве основы подробно откомментированне  конфигурационные  файлы. Данное
 руководство  освещает  только ключевые моменты  работы с Tornado и не-
 очевидные  для  пользователя  аспекты. Все переменные  основного файла
 конфигурации  имеют  необходимые  комментарии, и здесь  я буду  только
 ссылаться на них, указывая полное имя переменной и название секции.

    Также автором  настоятельно  рекомендуется прочтение FAQ, в котором
 можно найти ответы на многие вопросы.


 4. Требования к техническим и программым средствам
 ══════════════════════════════════════════════════

 4.1. Требования к техническим средствам
 ───────────────────────────────────────

   Для функционирования программы Tornado необходимы:

   - Компьютер типа IBM PC XT, AT386, AT486, P5, P6, P7 и т. д. ... :),
     PS/2 или компьютер, использующий  процессор и BIOS, полностью сов-
     местимые с указанными типами компьютеров;
   - Монохромный или цветной дисплей;
   - Последовательный порт компьютера (COM) - при использовании внешне-
     го модема;
   - Модем (внешний или внутренний). Поддерживаются  типы hayes,  cour-
     rier и microcom;
   - При  использовании  версии  Tornado для OS/2, необходим компьютер,
     достаточный для работы самой OS/2.

 4.2. Требования к программным средствам
 ───────────────────────────────────────

   Для функционирования программы Tornado необходимы:

   ■ Для DOS версии:
     - Операционная система MS/PC-DOS  версии не  ниже 3.30 или  DR-DOS
       версии не ниже 3.41.

   ■ Для OS/2 версии:
     - Операционная система OS/2 версии не ниже 2.1.
     - Коммуникационный драйвер fossil (sio, например).

 4.3. Дополнительные технические и программные средства
 ──────────────────────────────────────────────────────

    Следующие технические и программные средства не являются обязатель-
 ными для работы Tornado, однако  могут улучшить его функциональные ха-
 рактеристики и расширить область применения:

   - Дополнительная память (EMS или XMS), которая может быть  использо-
     вана для быстрой выгрузки тела программы (swap) при  запуске внеш-
     них программ и  команд, а также для  загрузки в нее  оверлея (файл
     tornado.ovr);
   - Программы кэширования обращений к диску;
   - Многозадачные операционные среды (OS/2, M$ Windows, DesqView, Top-
     View, VM/386, PC-MOS/386 и др.), с  помощью которых можно осущест-
     вить  запуск нескольких копий Tornado для работы с несколькими ли-
     ниями BBS одновременно.


 5. Интерфейс пользователя
 ═════════════════════════

    Tornado обладает довольно  удобным в обращении интерфейсом, который
 представлен двумя  режимами: ожидания  звонка и непосредственно работы
 пользователя.

 5.1. Режим ожидания звонка
 ──────────────────────────

    При запуске в  автономном режиме (без параметров -c и -b) программа
 переходит в автономный  режим работы, когда она  сама снимает трубку и
 отвечает на звонки. В этом  режиме на экране мы можем лицезреть следу-
 ющие вещи:

   - Окошко Log echo, в котором отображаются происходящие в этом режиме
     события;
   - Часы в правом верхнем углу. Если они Вам не нравятся, вы можете их
     убрать путем модификации файла конфигурации(параметр tornado.ctl->
     [Miscellaneous]->Clock);
   - Справа  внизу  находится  окно, содержащее  информацию о последних
     восьми заходивших на BBS пользователях (имя, время на линии, объем
     скачаной и закачаной информации за данный сеанс работы);
   - Слева внизу  расположено  окно Statistics, в  котором отображаются
     статистические  данные Вашей  станции (общее  количество  звонков,
     общее число  зарегистрировавщихся пользователей, количество  напи-
     санных  пользователями сообщений, скачаных и  закачаных на станцию
     файлов);
   - И, наконец, в  нижней строке  расположены подсказка  по клавишам и
     лампы-флажки  состояния  модема (CTS - clear  to send,  DSR - data
     send ready, DR - data ready, RI - ring indicator, CD - carrier de-
     tect).

    Из подсказки в нижней строке можно узнать о клавишах, задействован-
 ных в режиме ожидания звонка. Ими являются:

     ┌─────────┬─────────────────────────────────────────────┐
     │ Клавиша │ Действие                                    │
     ├─────────┼─────────────────────────────────────────────┤
     │ Alt-A   │ Принудительное  сиюминутное   поднятие  мо- │
     │         │ демом трубки и ответ на звонок.             │
     ├─────────┼─────────────────────────────────────────────┤
     │ Alt-L   │ Вход в программу в  локальном режиме  (ана- │
     │         │ логично ключу командной строки -l)          │
     ├─────────┼─────────────────────────────────────────────┤
     │ Esc     │ Прерывание текущего  режима  ожидания. Если │
     │         │ при ответе на  звонок, то  немедленно поло- │
     │         │ жить трубку, при ожидании звонка - выход из │
     │         │ программы.                                  │
     └─────────┴─────────────────────────────────────────────┘

 5.2. Режим работы пользователя
 ──────────────────────────────

    Во время работы  пользователя все, что выводится  ему на экран, ко-
 пируется Вам на локальный экран, за  исключением строки статуса, показ
 которой Вы можете переключать посредством клавиши F10. В ней отобража-
 ются: имя пользователя, его местонахождение и уровень доступа, а также
 оставшееся на сегодня время и лампочки  модема (или надпись "локальный
 режим" при  локальном  входе). Также  мы  видим все те же часы  справа
 вверху. В этом режиме работы используются следующие "горячие" клавиши:

     ┌────────────┬───────────────────────────────────────────────────┐
     │ Клавиша    │ Действие                                          │
     ├────────────┼───────────────────────────────────────────────────┤
     │ F1         │ Показ окошка помощи по "горячим" клавишам         │
     ├────────────┼───────────────────────────────────────────────────┤
     │ F2         │ Информация о текущем сеансе связи                 │
     ├────────────┼───────────────────────────────────────────────────┤
     │ F3         │ Увеличить время пользователя на 1 мин.            │
     ├────────────┼───────────────────────────────────────────────────┤
     │ F4         │ Уменьшить время пользователя на 1 мин.            │
     ├────────────┼───────────────────────────────────────────────────┤
     │ F10        │ Включение/выключение отображения строки           │
     │            │ статуса внизу экрана                              │
     ├────────────┼───────────────────────────────────────────────────┤
     │ Alt-C      │ Чат с пользователем                               │
     ├────────────┼───────────────────────────────────────────────────┤
     │ Alt-E      │ Редактирование данных пользователя                │
     ├────────────┼───────────────────────────────────────────────────┤
     │ Alt-G      │ Gluck (создает у пользователя впечатление         │
     │            │ плохой связи со станцией)                         │
     ├────────────┼───────────────────────────────────────────────────┤
     │ Alt-H      │ Принудительно завершение сеанса и разрыв связи    │
     ├────────────┼───────────────────────────────────────────────────┤
     │ Alt-I      │ Показ пользователю произвольного текстового файла │
     ├────────────┼───────────────────────────────────────────────────┤
     │ Alt-J      │ Временный выход в ДОС (без разрыва связи)         │
     ├────────────┼───────────────────────────────────────────────────┤
     │ Alt-L      │ Lockout ("выкидывание" пользователя) - разрыв те- │
     │            │ кущего  сеанса  связи и невозможность  его  зайти │
     │            │ впоследствии, пока  СисОп не повысит его  нулевой │
     │            │ уровень доступа с  помощью редактора  пользовате- │
     │            │ лей                                               │
     ├────────────┼───────────────────────────────────────────────────┤
     │ Alt-S      │ Изменение уровня доступа                          │
     ├────────────┼───────────────────────────────────────────────────┤
     │ Alt-M      │ Посылка пользователю сообщения без инициирования  │
     │            │ режима чата.                                      │
     ├────────────┼───────────────────────────────────────────────────┤
     │ Alt-T      │ Просмотр списка файлов, отмеченных пользователем  │
     │            │ для скачивания                                    │
     ├────────────┼───────────────────────────────────────────────────┤
     │ PageUp     │ Manual Send (tm) - послать пользователю файл(ы),  │
     │            │ предварительно выбрав их в файлменеджере          │
     └────────────┴───────────────────────────────────────────────────┘

 5.3. Настройка цветов
 ─────────────────────

    Настройка цветов Tornado осуществляется параметрами  файла конфигу-
 рации tornado.ctl в  секции Colors. Каждый из  параметров  этой секции
 задает цвет одного или  нескольких видимых  элементов на экране. Пара-
 метр Blinking управляет режимом мерцания.
    Подробности см. в комментариях к параметрам секции Colors дистрибу-
 тивного файла конфигурации. Здесь хочу лишь перечислить возможные зна-
 чения параметров, которыми задается цвет.

 Red,         Blue,        Green,   Cyan,         Magenta,   Yellow,
 White,       LightGray,   Black,   DarkGray,     LightRed,  LightBlue,
 LightGreen,  LightCyan,   Brown,   LightMagenta.

 6. Рабочий цикл Tornado
 ═══════════════════════

 6.1. Параметры командной строки
 ───────────────────────────────

    -K<filename>     - установить имя используемого файла кофигурации;
    -C<num>          - при вызове  из-под мейлера установить номер COM-
                       порта в <num>;
    -B<baud>         - при вызове  из-под  мейлера  установить скорость
                       соединения в <baud>;
    -O<filename> [D] - путь  и имя  файла  оверлея (если  tornado.exe и
                       tornado.ovr хранятся в  разных  каталогах или на
                       разных дисках);
    -H<handle>   [O] - handle коммуникационного порта;
    -M<command>      - задает команду,  которая будет послана  в порт в
                       самом начале работы программы;
    -A<command>  [W] - задает программу, которая  будет  запущена перед
                       завершением работы Tornado;

    NOTE:
    Специально  для  удобства передачи  команд модема  в командной
    строке при работе под  управлением Windows NT, символ "&" мож-
    но заменять последовательностью "##" во избежание проблемы пе-
    редачи оного, потому как в данной  операционной системе символ
    "&" служит для разделения вводимых команд при вводе их в одной
    строке.

    -U<user_name>    - установить  имя  входящего на BBS  пользователя,
                       причем в <user_name> необходимо использовать "_"
                       вместо пробелов;
    -L               - локальный режим работы;
    -R       [O] [D] - не  отдавать   процессорное  время многозадачной
                       операционной системе;
    -E<time>         - время до следующего события;
    -S<filename>     - запуск Tornado script файла с указанным именем,
    -T<filename> [O] - запуск Tornado REXX файла с указанным именем,
    -N<node_number>  - при работе в режиме многолинейной BBS задает но-
                       мер запускаемой линии станции.

  [D] - только для DOS-версии
  [O] - только для OS/2
  [W] - только для Win95/98/NT.

 6.2. Коды выхода (errorlevels)
 ──────────────────────────────

    0   : Нормальное завершение работы Tornado.
    10  : Работа завершена по желанию оператора.
    200 : Ошибка открытия/чтения файла tornado.res.
    201 : Ошибка открытия/чтения основного файла конфигурации
          (tornado.ctl).
    202 : Hе найдено ни одного LNG-файла.
    203 : Уровень доступа по умолчанию, заданный параметром tornado.ctl
          ->[NewUsers]->Security не найден в файле limits.ctl
    204 : Ошибка  открытия  главного  файла меню, заданного  параметром
          tornado.ctl->[Miscellaneous]->MainMenu.
    205 : Один из рабочих каталогов не найден.
    206 : Ошибка инициализации модема.
    207 : Ошибка открытия/чтения базы пользователей (users.tor).
    208 : Ошибка открытия/чтения файла протокола (tornado.log).
    209 : Ошибка открытия/чтения файла оверлея (tornado.ovr).
    210 : Ошибка открытия/чтения файла   системных  сообщений  (tornado
          .msg).
    211 : Ошибка времени выполнения (глюк). Желательно проинформировать
          автора.
    212 : Слишком мало памяти для запуска программы.

 6.3. Файлы-флажки
 ─────────────────

    В процессе работы программы в зависимости от  действий пользователя
 (и не только) в каталоге, заданном параметром конфигурации tornado.ctl
 ->[Files&Dirs]->FlagsDir, могут создаваться так называемые файлы-флаж-
 ки, имеющие одно из нижеприведенных имен и расширение, соответствующее
 номеру линии (например: флажок tor_file.001 будет означать, что на ли-
 нии номер 1 пользователь сделал upload какого-либо файла).

 Имена файлов-флажков:

 tor_run   - флажок, означающий, что линия с указанным номером запущена
             и в данный момент работает;
 tor_mail  - пользователем  на  линии написано  сообщение  в какую-либо
             почтовую область;
 tor_file  - пользователь залил  файл(ы) в какую-либо  файловую область
             (содержит список файлов, закачаных  за последний сеанс ра-
             боты);
 tor_ncht  - наличие этого  флага определяет, разрешен ли  вызов сисопа
             на чат в  настоящий  момент  времени (если  присутствует -
             запрещено).

 7. Настройка программы
 ══════════════════════

 7.1. Коды задания цвета текста
 ──────────────────────────────

    Цвет текста сообщений  можно задавать, используя в  строке, скажем,
 .lng файла, следующие последовательности:

    \00 - черный,
    \01 - синий,
    \02 - зеленый,
    \03 - бирюзовый,
    \04 - красный,
    \05 - сиреневый,
    \06 - коричневый,
    \07 - серый,
    \08 - темно-серый,
    \09 - ярко-синий,
    \10 - ярко-зеленый,
    \11 - голубой,
    \12 - ярко-красный,
    \13 - розовый,
    \14 - желтый,
    \15 - белый.

    Если же вместо символа "\" в такой последовательности поставить "%",
 то будет изменяться цвет фона.

    Символ "|" означает перенос строки.

    Такими же последовательностями можно задавать цвет текста при пока-
 зе описаний файлов, используя их в files.bbs.

 7.2. Макросы
 ────────────

    В текстовых файлах и в сообщениях .lng можно использовать следующие
 макросы:

    $FILE:<имя_файла_для_показа> - показывает .A??  файл,  имя которого
            задается через двоеточие от макроса,

    $EXEC:<имя_файла_для_показа> - выпоняет программу на встроенном
            языке, имя файла с которой задается через двоеточие от мак-
            роса,

    $PROD - название используемой версии Tornado,
    $USRS - общее количество пользователей станции BBS,
    $NAME - полное имя пользователя,
    $FNAM - имя (first name) пользователя,
    $LNAM - фамилия пользователя,
    $ALAS - псевдоним,
    $PSWD - пароль пользователя,
    $DAOB - дата рождения,
    $SYSO - имя СисОпа,
    $BBSN - название станции,
    $NODE - номер запущенной линии BBS,
    $LOCA - местонахождение пользователя,
    $ORGZ - организация,
    $HPHN - дом. телефон,
    $BPHN - раб. телефон,
    $ADR1 - сетевые адреса,
    $ADR2 ──┤
    $ADR3 ──┘
    $CMNT - комментарий,
    $DATE - текущая дата,
    $TIME - текущее время,
    $SECR - уровень доступа,
    $FLGS - флажки,

    $FARE - название текущей файловой области,
    $FNUM - номер текущей файловой области,
    $FAGR - количество областей в текущей файловой группе,
    $FAMT - общее количество определенных файловых областей,

    $FGRP - название текущей файловой группы,
    $FGRN - номер текущей файловой группы,
    $FGAM - общее количество определенных файловых групп,

    $MARE - название текущей почтовой области,
    $MNUM - номер текущей почтовой области,
    $MAGR - количество областей в текущей почтовой группе,
    $MAMT - общее количество определенных почтовых областей,

    $MGRP - название текущей почтовой группы,
    $MGRN - номер текущей почтовой группы,
    $MGAM - общее количество определенных почтовых групп,

    $ULDS - количество залитых пользователем файлов,
    $DNLS - количество скачаных пользователем файлов,
    $ULKB - общий объем закачаных пользователем файлов,
    $DLKB - общий объем скачаных пользователем файлов,
    $DLTK - общий объем скачаного пользователем сегодня,
    $MSGP - количество написанных пользователем сообщений,

    $LFKB - оставшийся лимит по скачке (в килобайтах),
    $TTME - время, предоставляемое пользователю на один день соответст-
            венно его уровню доступа,
    $ETME - количество оставшегося на сегодня времени,
    $OTME - количество врмени, проведенного на линии за этот сеанс,
    $CALN - номер звонка на BBS,
    $FDTE - дата первого звонка,
    $LDTE - дата последнего звонка,
    $LTME - время последнего звонка,
    $PROT - название используемого для передачи файлов протокола,
    $LINS - количество строк на экране (из пользовательских установок),
    $LANG - название текущего языка сообщений,
    $EMUL - название  эмулируемого   терминала  ("ANSI",  "AVATAR"  или
            "TTY"),
    $MORE - пауза после каждой страницы экрана (да/нет),
    $HKEY - использование "горячих клавиш" (да/нет),
    $FRAM - рамки в полях ввода (да/нет),
    $FSED - использование полноэкранного редактора сообщений (да/нет),
    $SELK - объем выбранных пользователем файлов,
    $SELN - количество выбранных файлов,
    $LIMK - дневное ограничение на объем скачиваемых файлов,
    $ETTM - прогнозируемое время пересылки всех выбранных файлов,
    $BAUD - скорость соединения.

    Если после макроса  указать  некоторое количество  символов "X", то
 значение макроса будет приведено к длине, равной количеству "X" плюс 5
 символов самого  макроса. Удобно  для подстановки  значений макросов в
 различные рамки/таблички.

 7.3. Задание интервалов времени
 ───────────────────────────────

    В некоторых параметрах конфигурационных файлах используется задание
 интервалов времени. Значение таких параметров может состоять из одного
 или нескольких промежутков времени, разделителем между которыми служит
 запятая. Простейший интервал времени задается следующим образом:

                           23:00-05:30

 Это означает, что  интервал  охватывает время с 23 часов до 5 часов 30
 минут  включительно ежедневно.  Кроме того,  есть возможность  задания
 дней недели, в которые этот интервал  действует (включительно). Напри-
 мер:
                          1.10:00-5.16:00

 Это  означает,  что  интервал охватывает  время с 10 часов до 16 часов
 пять дней в неделю - с  понедельника по  пятницу. Цифра с точкой перед
 временем означает  номер дня  недели: 1-понедельник, 2-вторник, ...,
 или 0 - воскресенье. Можно создавать сложные интервалы, например:

                    1.22:00-5.06:00,6.00:00-7.24:00

 охватываются периоды с понедельника по пятницу с 22 до 6 часов, в суб-
 боту и воскресенье - круглосуточно;

      1.09:00-1.17:00,2.09:00-2.15:00,3.12:00-5.18:00,6.21:00-6.23:30

 охватываются  периоды:  понедельник - с 9 до 17,  вторник - с 9 до 15,
 со  среда по  пятницу - с 12 до 18, суббота - с 21 до 23:30, в воскре-
 сенье интервалов нет.


 7.4. .A?? файлы
 ───────────────

    В некоторых параметрах файлов  конфигурации  требуется  определение
 имен файлов для показа. Существует несколько способов задания имен:

   1. Явно указать полный путь, имя и расширение файла.
   2. Не указывать расширение. В этом случае Tornado сам подставит нуж-
      ное  расширение в  зависимости от  выбранного типа терминала,  то
      есть: если выбран терминал ANSI - расширение будет .ans, Avatar -
      .avt и TTY - .asc.
   3. Не указывать путь. Тогда поиск показываемых файлов будет  браться
      из    файла-описателя   выбранного   языка   сообщений  (параметр
      *.lng->[Files]->TxtFiles).

    В .A?? файлах можно  использовать специальный код - ASCII#1, по об-
 наружении которого Tornado делает паузу и ожидает нажатия Enter.

    Существуют также и зарезервированные имена файлов. Файлы с  нижепе-
 речисленными  именами  и расширениями  ans/asc/avt (в  зависимости  от
 выбранного типа терминала), находящиеся в каталоге, определенном пара-
 метром [Files]->TxtFiles текущего LNG-файла будут показываться пользо-
 вателю в следующих случаях:

 ───────────┬──────────────────────────────────────────────────────────
  Имя файла │ Когда показывается
 ───────────┼──────────────────────────────────────────────────────────
    WELCOME │ до запроса на сканирование почтовых и файловых  областей
            │
     LOGOFF │ при завершении пользователем  работы  с ббс  путем выбора
            │ соответсвующего пункта меню
            │
    LOCKOUT │ при локауте пользователя  (принудительном  завершении его
            │ работы СисОпом и невозможности зайти  под  этим  именем в
            │ следующий раз). При попытке такого  пользователя зайти на
            │ ббс  после  локаута ему  также  показывается  этот файл и
            │ кладется трубка
            │
    NEWUSER │ после положительного ответа на  вопрос о начале регистра-
            │ ции нового пользователя
            │
     REGEND │ сразу по окончании регистрации нового пользователя
            │
    BADUSER │ при входе пользователя, внесенного в bad users list
            │
    GOODUSR │ при входе пользователя, внесенного в good users list
            │
    TOOSLOW │ при входе пользователя на скорости ниже  минимальной (за-
            │ дается параметром Tornado.Ctl->[Modem]->Min_Speed)
            │
    NOTAVAL │ при попытке вызова СисОпа в  недопустимое для  этого вре-
            │ мя
            │
    LOGTIME │ при попытке  входа пользователя, когда  текущее  время не
            │ соответствует допустимому  времени  входа для его  уровня
            │ доступа (limits.ctl->[Limit]->Login_Time)
            │
      START │ непосредственно перед показом стартового меню
            │
   CHTFRAME │ фон для встроенного полноэкранного чата
            │
    TRCHELP │ описание команд TRC
            │
 ───────────┴──────────────────────────────────────────────────────────

 Если вы хотите, чтобы в вышеуказанных  случаях показывался  не один, а
 несколько файлов, вы можете поместить  в  каталог, заданный параметром
 <текущий_lng>->[Files]->TxtFiles, файлы с прибавленными к зарезервиро-
 ванному имени цифрами от 1  до 9.  Например: logoff.ans,  logoff1.ans,
 logoff2.ans, и т.д. Эти файлы будут показываться по очереди.

 7.5. Уровни доступа и пользовательские флажки
 ─────────────────────────────────────────────

    Для разграничения  прав пользователей  при работе с  BBS существуют
 так называемые уровни  доступа (security levels). Они  определяют воз-
 можность совершать пользователями какие-либо действия на BBS. То есть,
 скажем,для активизации встроенного DoorWay установлен минимальный уро-
 вень доступа 10, и, если  пользователь с  уровнем 5 попытается войти в
 DoorWay, то ему это  разрешено не  будет из-за  недостаточного  уровня
 доступа. Таким образом можно разрешать/запрещать  пользователям выпол-
 нение многих действий (здесь я  описывать их не буду, тк  изучив файлы
 конфигурации почтовых и файловых областей, doorway и прочего, вы узна-
 ете это сами). Также уровнями доступа задаются суточные лимиты времени
 на линии и объема скачиваемых файлов. Сами уровни  доступа и связанные
 с ними лимиты задаются файлом limits.ctl. Уровень  доступа, устанавли-
 ваемый по умолчанию пользователю во  время регистрации, задается пара-
 метром tornado.ctl->[NewUsers]->Security.

    А если вам нужно, скажем, разрешить/запретить  какие-либо  действия
 пользователям, имеющим один и тот же уровень доступа и, следовательно,
 одинаковые  лимиты, которые  вы  менять не  желаете, то на этот случай
 существует очень удобное средство - флажки. То есть почти для  каждого
 действия можно выставить флажки (они имеют вид строки, содержащей заг-
 лавные буквы,  каждая  из  которых,  собственно, и является  отдельным
 пользовательским флажком). Информация о каждом пользователе  также со-
 держит строку флажков. Так вот, при попытке  выполнить какое-либо дей-
 ствие проверяется наличие всех флажков из числа необходимых для выпол-
 нения оного в строке флажков пользователя и, если строка флажков поль-
 зователя содержит все необходимые для  действия  флажки, то выполнение
 действия разрешается.
    Примеры:   Флажки пользователя │ Необх. флажки │ Результат
              ─────────────────────┼───────────────┼──────────────
               ABCD                │ ABD           │ разрешено
               ABCD                │ ACF           │ не разрешено
               ABCDEFGHIJKLMNOPQRS │ AJS           │ разрешено
               A                   │ ABC           │ не разрешено
              ─────────────────────┴───────────────┴──────────────
    Флажки, устанавливаемые по умолчанию  пользователю во время регист-
 рации,   задаются  параметром tornado.ctl->[NewUsers]->Security  через
 пробел после уровня доступа. Так можно делать во всех  параметрах, за-
 дающих  уровни  доступа (filearea.ctl->List_Security, msgarea.ctl->Re-
 ad_Security и т.д.).

 7.6. Настройка языков сообщений
 ───────────────────────────────

    Все сообщения Tornado,  используемые для  общения с  пользователем,
 поддаются  конфигурации. А  именно, все  сообщения и пути  к текстовым
 файлам и меню задаются описателями файлами языков, которые  имеют рас-
 ширение  .LNG и находятся  в системном каталоге  Tornado. В них же при
 желании  можно прописывать и  таблицы перекодировки  сообщений языка в
 различные кодовые страницы.
    Во  время регистрации  пользователя, а  именно в  самом ее  начале,
 пользователю предоставляется  выбор из  нескольких языков, на  которых
 ббс будет с ним общаться. Это меню формируется из  названий, описанных
 в .LNG файлах. Если же присутствует только один .LNG файл, то он уста-
 навливается автоматически.
    Каждый .LNG файл состоит из трех секций:

 [Main]

 Name
   Название языка сообщений.

 Ask_XLAT
   Спрашивать ли у пользователя после выбора этого языка желаемую таб-
   лицу перекодировки.

 Raw_XLAT_Name
   Название кодировки, при которой сообщения языка  перекодировываться
   не будут совсем (сделано для возможности выбора "пустой" кодировки).

 [Files]

 TxtFiles
   Путь к текстовым файлам (ans/avt/asc) и файлам-сценариям данного
   языка.

 Menus
   Путь к файлам меню для данного языка.

 News
   Имя файла новостей для данного языка (см. пункт 7.13).

 [Language_Section]

   Секция, содержащая сам  текст сообщений. Расписывать  здесь значение
 каждого параметра этой  секции я не буду, потому что все можно найти в
 .LNG файлах, входящих в поставку Tornado. Обращу лишь  внимание на та-
 кие параметры, как  Msg_Keys,  YesNo_Keys, YesNoQuit_Keys,  Post_Keys,
 FArea_Menu, - они содержат список "горячих" клавиш, подсказка по кото-
 рым задается  параметрами MsgString, Yes_No,  Yes_No_Quit, Post_Menu и
 FAreaLine соответственно.

 [XLAT]

 Содержимое этой секции должно выглядеть следующим образом:

 [XLAT]
 <file1.xlt>  XLAT table number 1
 <file2.xlt>  XLAT table number 2
  ........    ......
 и т. д.

 Несложно заметить, что первое слово здесь в каждой строке - имя файла,
 содержащего таблицу перекодировки символов, а остальное - название ко-
 дировки. Файлы  .XLT  имеют  структуру Array [0..255] Of  Char; Каждый
 элемент массива содержит символ, в  который происходит перекодирование
 выводимых  символов,  причем  порядковый  номер  элемента  совпадает с
 ASCII-кодом исходного символа для перекодирования.


 7.7. Конфигурация пользовательских меню
 ───────────────────────────────────────

    Важным элементом  ббс являются меню, с помощью которых пользователь
 осуществляет  выбор действий, которые  он хочет  произвести. Как и все
 файлы конфигурации Tornado, файлы меню имеют  текстовый вид. Они долж-
 ны находиться в каталоге, указанном  переменной [Files]->Menus в файле
 конфигурации языка сообщений, выбранного пользователем (эти файлы име-
 расширение .LNG и находятся в системном  каталоге Tornado). Файлы меню
 по умолчанию имеют расширение .MNU и состоят из двух секций:

 [Header]       - эта секция задает установки для всего  меню и состоит
                  из трех параметров:

 DisplayFile    - файл (.asc/.avt/.ans в зависимости от  выбранной эму-
                  ляции), а если он не  задан, то будет  показан список
                  элементов меню;

 Prompt         - строка,  показываемая  при ожидании выбора; может со-
                  держать макросы и цветовые последовательности;

 WriteHotKeys   - Yes или No; определяет, показывать ли  список горячих
                  клавиш после показа всех элементов меню перед выводом
                  строки, заданной параметром prompt;

 Arrows_Setup   - параметр,  наличие  которого  определяет  способ осу-
                  ществления  выбора  в меню: курсорными  клавишами или
                  "горячими"  кнопками - если  задан, то  меню является
                  курсорным; синтаксис:

                  Arrows_Setup Cols:Rows Y:X HighLightColor

                  где
                  Cols и Rows : Количество  столбцов и строк в меню со-
                                ответственно;
                  Y и X       : Координаты левого верхнего угла меню;
                  Color       : Цвет фона подсвеченного (текущего) эле-
                                мента меню; задается  в  виде  названия
                                цвета;

 И

 [Menu]         - эта секция состоит из строк, каждая из  которых опре-
                  деляет отдельный вариант выбора. Например:

 Gosub_Menu+  "files"   ABC    0    "\14(\15F\14) \02Файлы   |"    F
 ^^^^^^^^^^(1) ^^^^^(2) ^^^(3) ^(4) ^^^^^^^^^^^^^^^^^^^^^^^^^^^(5) ^(6)
 , где:

 (1) действие (т.н. action), которое будет  выполнено при  выборе этого
     пункта меню; здесь - перейти к другому файлу меню (Gosub_Menu);

     ВНИМАНИЕ: если сразу  после действия стоит "+", то этот пункт счи-
               тается  autoexec-пунктом, то  есть он будет  выполняться
               сразу при показе меню;

 (2) optional data - дополнительная  информация, необходимая к  данному
     действию; для этого  действия - имя файла  меню, к которому  будет
     осуществлен переход в случае выбора пункта;

 (3) флажки, необходимые пользователю для выбора данного пункта меню;

 (4) минимальный уровень доступа, необходимый для выбора  пункта; здесь
     он равен  нулю, а это значит, что  выбрать этот  пункт имеет право
     пользователь с любым уровнем доступа, большим нуля;

 (5) текст, выводимый  в меню для  этого пункта; здесь  текст  содержит
     цветовые последовательности, которые дают возможность выделять от-
     дельные участки текста различными  цветами, подробности см. в пун-
     кте 7 документации;

 (6) "горячая клавиша" (hot-key), по нажатию которой  данный пункт меню
     будет активизирован; здесь - буква "F"; также  в качестве  hotkeys
     можно использовать курсорные клавиши keyb_Up, keyb_Down, keyb_Left,
     keyb_Right, keyb_Home и keyb_End

 Теперь  я бы хотел  вернуться к  параметру No. 1, то есть к  Action, и
 рассказать, какие же значения может принимать этот  параметр. Так  что
 вот список, в котором указаны названия действий, их  описания и допол-
 нительные данные, необходимые этим действиям:

 ──────────────────────────────────────────────────────────────────────
 Action      : Display_Text
 Действие    : Просто показать текст, указанный в opt. data.
 Доп. данные : Тест для показа.
 ──────────────────────────────────────────────────────────────────────
 Action      : Gosub_Menu
 Действие    : Переход в другое вложенное меню.
 Доп. данные : Имя файла с меню.
 ──────────────────────────────────────────────────────────────────────
 Action      : DownLoad
 Действие    : DownLoad файл(а/ов). Если указано имя файла в opt. data,
               то этот файл, иначе предоставляется выбор в текущей фай-
               ловой области.
 Доп. данные : Имя файла для скачивания.
 ──────────────────────────────────────────────────────────────────────
 Action      : UpLoad
 Действие    : Прием файла. Если указан  каталог в opt. data, то  прием
               осуществляется  в этот  каталог, иначе - в каталог, ука-
               заный в  описании  текущей файловой  области  параметром
               ULPath.
 Доп. данные : Каталог для приема.
 ──────────────────────────────────────────────────────────────────────
 Action      : UpLoad_Priv
 Действие    : Private uploads (tm). Сразу после  выбора  этого  пункта
               запрашивается  имя пользователя, которому  будет предна-
               значены  файлы, затем  Tornado примет  их  и создаст для
               него .lst файл. После  входа  пользователя-получателя на
               BBS эти файлы будут предложены ему для скачивания.
 Доп. данные : Имя пользователя, которому будут адресованы файлы.
 ──────────────────────────────────────────────────────────────────────
 Action      : Return
 Действие    : Возврат в предыдущее меню.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : LogOff
 Действие    : Окончание работы с ббс.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Change_FGroup
 Действие    : Сменить файловую группу. Номер указан в  opt. data,  ес-
               ли не указан - предоставляется выбор из списка.
 Доп. данные : Номер файловой группы.
 ──────────────────────────────────────────────────────────────────────
 Action      : Change_FArea
 Действие    : Сменить файловую область. Если в  opt. data указан номер
               области, то область с этим  номером  становится текущей,
               иначе - предоставляется выбор из списка областей.
 Доп. данные : Номер файловой области.
 ──────────────────────────────────────────────────────────────────────
 Action      : User_Info
 Действие    : Информация о пользователе. Если в opt.data указано имя,
               то о пользователе с этим именем.
 Доп. данные : Имя пользователя.
 ──────────────────────────────────────────────────────────────────────
 Action      : Msg_Post
 Действие    : Написать сообщение. Если в opt.data указан номер почто-
               вой области - в область с этим номером, иначе - в теку-
               щую.
 Доп. данные : Номер почтовой области.
 ──────────────────────────────────────────────────────────────────────
 Action      : FileList
 Действие    : Показ списка файлов в текущей файловой  области. Если в
               в opt.data указан номер - в области с заданным номером.
 Доп. данные : Номер файловой области.
 ──────────────────────────────────────────────────────────────────────
 Action      : Show_Raw_Dir
 Действие    : Показ списка файлов в текущей файловой области без уче-
               та содержимого  files.bbs (аналогично  команде dir, вы-
               полненной в  каталоге с файлами  текущей области). Если
               в opt.data указан номер - в области с заданным номером.
 Доп. данные : Номер файловой области.
 ──────────────────────────────────────────────────────────────────────
 Action      : Display_File
 Действие    : Показать файл с именем в opt.data, взятый из  каталога,
               указанного  в  текущем .lng файле  переменной [Files]->
               TxtFiles.
 Доп. данные : Имя файла для показа.
 ──────────────────────────────────────────────────────────────────────
 Action      : Page_SysOp
 Действие    : Вызов СисОпа на чат  на тему,  указанную в  opt.data, а
               если не указана, тема запрашивается у пользователя.
 Доп. данные : Тема чата.
 ──────────────────────────────────────────────────────────────────────
 Action      : Shell
 Действие    : Вход во встроенный DoorWay.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Change_MGroup
 Действие    : Сменить почтовую группу. Номер указан в  opt. data, ес-
               ли не указан - предоставляется выбор из списка.
 Доп. данные : Номер почтовой группы.
 ──────────────────────────────────────────────────────────────────────
 Action      : Change_Msg_Area
 Действие    : Сменить почтовую область. Номер указан в opt. data, ес-
               ли не указан - предоставляется выбор из списка.
 Доп. данные : Номер почтовой области.
 ──────────────────────────────────────────────────────────────────────
 Action      : Msg_Read
 Действие    : Чтение сообщений в области с  номером в opt.data, а ес-
               ли opt. data не задана - в текущей.
 Доп. данные : Номер почтовой области.
 ──────────────────────────────────────────────────────────────────────
 Action      : Msg_List
 Действие    : Показать список сообщений в области с номером в opt.da-
               ta, а при ее отсутствии - в текущей почтовой области.
 Доп. данные : Номер почтовой области.
 ──────────────────────────────────────────────────────────────────────
 Action      : System_Info
 Действие    : Показать системную информацию.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Goto_Menu
 Действие    : Переход в  меню с  именем в opt.data, но, в  отличие от
               gosub, без возможности возврата в вызывающее меню.
 Доп. данные : Имя файла меню.
 ──────────────────────────────────────────────────────────────────────
 Action      : Exec
 Действие    : Запуск программы.
 Доп. данные : Имя программы/команда.
               Здесь можно использовать следующие макросы:

                 *P - номер используемого коммуникационного порта,
                 *B - скорость соединения,
                 *H - com port handle (только для версии под OS/2),
                 *G - использует ли пользователь ANSI-графику (1 - ис-
                      пользует, 0 - нет),
                 *F - имя пользователя (first name),
                 *L - фамилия пользователя (last name),
                 *T - количество оставшегося у пользователя времени,
                 *N - номер линии.

               Hапример: "door.exe /c*P /b*B" при установленном номере
               com-порта 1  и  скорости  2400  будет  преобразовано  в
               "door.exe /c1 /b2400".
 ──────────────────────────────────────────────────────────────────────
 Action      : Scan_NewFiles
 Действие    : Поиск новых файлов со дня последнего входа пользователя
               на BBS по всем файловым областям.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Scan_PrivMail
 Действие    : Искать непрочитанную  личную почту по всем почтовым об-
               ластям.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Send_Msg
 Действие    : Многолинейка: послать сообщение  пользователю на другой
               линии.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Set_Msg_Off
 Действие    : Многолинейка: выключить  прием сообщений от пользовате-
               лей с других линий BBS.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Set_Msg_On
 Действие    : Многолинейка: включить прием сообщений от пользователей
               с других линий BBS.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Line_List
 Действие    : Список пользователей, находящихся на других линиях BBS.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Change_Param
 Действие    : Изменить значение одного из параметров пользователя,
               заданного буквой в opt.data:

                  A - местонахождение,
                  B - место работы/учебы,
                  C - сетевые адреса,
                  D - пароль,
                  E - дом. телефон,
                  F - рабочий/модемный телефон,
                  G - дата рождения,
                  H - строк на дисплее,
                  I - язык сообщений,
                  J - протокол пересылки,
                  K - эмуляция терминала,
                  L - пауза после каждой страницы экрана,
                  M - использование "горячих" клавиш,
                  N - использование "рамочных" полей ввода,
                  O - псевдоним,
                  P - использование полноэкранного
                      редактора сообщений.

 Доп. данные : Буква параметра.
 ──────────────────────────────────────────────────────────────────────
 Action      : ArcView
 Действие    : Просмотр архивного файла из текущей  выбранной файловой
               области, а если указана opt.data (имя файла) - заданный
               в opt.data файл.
 Доп. данные : Путь и имя файла.
 ──────────────────────────────────────────────────────────────────────
 Action      : Re_Login
 Действие    : Вход под другим  именем в данном  сеансе связи без рас-
               соединения.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Todays_Callers
 Действие    : Просмотр списка звонивших сегодня пользователей.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : News
 Действие    : Просмотр новостей
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Conference
 Действие    : Многолинейный режим: вход в  TRC (конференцию реального
               времени).
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Next_FileArea
 Действие    : Быстрая смена файловой области: переход к следующей.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Prev_FileArea
 Действие    : Быстрая смена файловой области: переход к предыдующей.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Next_MsgArea
 Действие    : Быстрая смена почтовой области: переход к следующей.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Prev_MsgArea
 Действие    : Быстрая смена почтовой области: переход к предыдующей.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Next_FileGroup
 Действие    : Быстрая смена файловой группы: переход к следующей.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Prev_FileGroup
 Действие    : Быстрая смена файловой группы: переход к предыдующей.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Next_MsgGroup
 Действие    : Быстрая смена почтовой группы: переход к следующей.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Prev_FileGroup
 Действие    : Быстрая смена почтовой группы: переход к предыдующей.
 Доп. данные : -
 ──────────────────────────────────────────────────────────────────────
 Action      : Exec_Script
 Действие    : Запуск и выполнение  файла-сценария (см. главу докумен-
               тации о встроенном языке)
 Доп. данные : Имя файла. Если не задан путь, то файл ищется в катало-
               ге с текстовыми  файлами  данного языка, если не задано
               расширение, то по умолчанию берется .TRS.
 ──────────────────────────────────────────────────────────────────────
 Action      : Exec_Rexx
 Действие    : Запуск и выполнение  файла-сценария на REXX (только для
               версии под OS/2)
 Доп. данные : Имя файла. Если не задан путь, то файл ищется в катало-
               ге с текстовыми  файлами  данного языка, если не задано
               расширение, то по умолчанию берется .TRX.
 ──────────────────────────────────────────────────────────────────────
 Action      : Select_QWK
 Действие    : Выбор  активных областей  для  сканирования и запаковки
               сообщений в QWK.
 Доп. данные : Нет.
 ──────────────────────────────────────────────────────────────────────
 Action      : DownLoad_QWK
 Действие    : Поиск, запаковка и отправка QWK-пакета с новыми сообще-
               ниями пользователю.
 Доп. данные : Нет.
 ──────────────────────────────────────────────────────────────────────
 Action      : UpLoad_QWK
 Действие    : Прием REP-пакета с последующим помещением содержимого в
               почтовые области.
 Доп. данные : Нет.
 ──────────────────────────────────────────────────────────────────────
 Action      : Telnet
 Действие    : Запускает встроенный Telnet client.
 Доп. данные : Имя машины, с которой собираемся связаться.
 ──────────────────────────────────────────────────────────────────────


 7.8. Конфигурация протоколов пересылки файлов
 ─────────────────────────────────────────────

    Имя файла  конфигурации протоколов (как  внешних, так и внутренних)
 содержится  в  значении  параметра   tornado.ctl->[Files&Dirs]->Proto-
 col_CTL. Этот файл состоит из секций двух типов:

 [Internal]

   Здесь  задается, какие  внутренние  протоколы доступны для пересылки
 файлов пользователями BBS. В этой секции находится всего семь парамет-
 ров, каждый из которых отвечает за одноименный протокол. Их значениями
 должны быть  слова Yes или  No ("доступен" или "не доступен"  соответ-
 ственно). Такая  секция в файле конфигурации протоколов должна присут-
 ствовать в единственном экземпляре.

 [External]

   Секциями такого  вида описываются внешние  протоколы, подключенные к
 BBS (вы можете определить несколько таких протоколов). Как  именно это
 делается, можно  без труда понять, прочитав комментарии в файле конфи-
 гурации протоколов.


 7.9. Запуск BBS из-под мейлера
 ──────────────────────────────

    Как Вы уже заметили, при запуске без параметров программа переходит
 автономный режим, то есть сама снимает трубку, сама отвечает на звонки
 и пускает пользователей. Но это не удобно, когда на Вашей машине еще и
 должна работать почтовая программа (мейлер), которая  обеспечивает об-
 мен  почтой в  сетях  вроде FidoNet. В этом случае  можно сделать так,
 чтобы  Tornado  запускался  из-под мейлера. Я сейчас расскажу  как это
 сделать на примере  широко распространенного  мейлера T-Mail (в других
 мейлерах это делается аналогично). В силу  некоторых особенностей опе-
 рационных систем, для которых существуют версии программы, данная про-
 цедура имеет несколько вариантов.


 7.9.1. Tornado/DOS (версия для DOS)
 ───────────────────────────────────

 1. В t-mail.ctl следует внести строчку:
 -----
 Process BBS exebbs.bat *P *B *T *H
 -----
 которая  означает, что при  вызове BBS будет запускаться файл с именем
 exebbs.bat и ему будут  передаваться  параметры (*P - порт, *B -  ско-
 рость соединения, *T - номер линии, *H - время до ближайшего события).

 2. Файл exebbs.bat должен содержать следующее:
 -----
 cd <путь к Tornado>
 tornado.exe -c%1 -b%2 -n%3 -e%4
 -----
 То есть при указании параметра -b или -c Tornado будет считать, что он
 запущен из-под мейлера и уже установлена связь. Что означает каждый из
 параметров командной строки можно прочитать в п.5 данной документации.


 7.9.2. Tornado/2 (версия для OS/2)
 ──────────────────────────────────

 Настройка Tornado для  запуска из-под  мейлера под OS/2  отличается от
 предыдущего  описания  разве  что тем, что расширение  пакетного файла
 должно быть .CMD, а не .BAT, как в DOS.


 7.9.3. Tornado/W32 (версия для Win95/98/NT)
 ───────────────────────────────────────────

 Я опишу два способа запуска Tornado/W32 из-под мейлера. Выбирайте тот,
 который вам больше понравится.

 Способ номер один
 ─────────────────

 1. Из-за того, что при  закрытии порта  Windows автоматически опускает
 флаг DTR, мы должны сделать так, чтобы модем при этом не разрывал сое-
 динение. Для этого в конфигурации мейлера мы зададим  такую строку для
 ответа:
 -----
 Modem_Answer AT&D1A|
 -----
 Для AT-совместимых модемов команда &D1  устанавливает режим,  когда на
 пропадание флага DTR в COM-порте  модем реагирует не разрывом соедине-
 ния, а переходом в командную строку.

 2. Строка запуска Tornado:
 -----
 Process BBS   !start /w C:\TORNADO\tor32.exe -b*B -c*P -e*H -mAT&D2O
 -----

 Примечание: при работе под управлением Windows NT символ "&" реко-
             мендуется  заменять  на "##", т. е. параметр -m должен
             выглядеть так: -mAT##D2O

 В этом случае BBS  запускается сразу из-под мейлера, а задача, в кото-
 рой мы сделали start, ждет  завершения ее работы, затем возвращается в
 мейлер и работа станции продолжается.

 Способ номер два
 ────────────────

 1. Создаем .bat файл,  из которого будет  запускаться мейлер (показано
 на примере T-Mail.NT):

 === T-MAIL.BAT ===
 cd \t-mail
 t-mailnt.exe
 if errorlevel 99 goto bbs
 goto end
 :bbs
 cd \tornado
 tor32 -c2 -b14400 -aT-MAIL.BAT -mAT&D2O
 :end
 ==================

 2. Говорим мейлеру, чтобы при входе  пользователя на BBS тот выходил с
 errorlevel 99. Для нашей  ситуации для  этого  достаточно в t-mail.ctl
 прописать такую строчку:
 -----
 Process BBS Exit 99
 -----

 3. Также мы должны сделать так, чтобы  модем при пропадании DTR не ра-
 зрывал соединение. Строка для ответа:
 -----
 Modem_Answer AT&D1A|
 -----

 Как это работает: после нажатия  пользователем  комбинации Esc-Esc мей-
 лер выходит с errorlevel 99 и пакетный файл  передает управление Torna-
 do/W32,  после чего  благополучно завершается. Tornado, в свою очередь,
 при старте  посылает в  порт команду AT&D2O (параметр -m), чтобы  модем
 вернулся из командной строки на линию, а в конце работы запускает все
 тот же пакетный файл с мейлером.


 7.10. Пара слов о многолинейном режиме работы
 ─────────────────────────────────────────────

    Если Вы знакомы с особенностями работы в многолинейном режиме таких
 мейлеров, как Sf-Mail или T-Mail, то  Вам  будет проще  разобраться  в
 многолинейке  Tornado. Для  всех  линий ББС Tornado  использует только
 один файл  конфигурации. Но, естественно, что хотя бы коммуникационные
 порты для разных линий должны различаться,т.е. для каждой линии - свой
 порт. Для этого во ВСЕХ файлах .ctl можно использовать  следующий син-
 таксис:
 ----------------
   {N,N1,N2,N3-N10} Parameter Value
 ----------------
   где N, N1, N2 .. Nx - номера  линий, Parameter - параметр конфигура-
 ции со значением Value, например:
 ----------------
   [System]
   {1} BBSName "Pulse BBS line 1"
   {2} BBSName "Pulse BBS line 2"

   [Modem]
   {1} Port 1
   {2} Port 2
  ---------------
 Параметры без  модификатора линии {N} принимаются одними и теми же для
 всех линий. Так что все  предельно  просто. Теперь Вам осталось только
 описать параметры, которые  должны быть различными для  разных линий и
 запустить Tornado в нескольких  окнах (в зависимости от количества ли-
 ний) под  какой-нибудь  многозадачной средой (благо Tornado умеет кор-
 ректно работать под многими многозадачными ОС, так что  проблем с этим
 не будет) с параметром командной строки -N<node_number>, где node_num-
 ber - номер запускаемой линии.

 7.11. Файловые и почтовые области
 ─────────────────────────────────

    Файловые и почтовые области служат для тематического разделения ин-
 формации, доступной для  пользователей на вашей BBS. Имена файлов кон-
 фигурации областей задаются параметрами tornado.ctl->[Files&Dirs]->Fi-
 leAreas_File и  tornado.ctl->[Files&Dirs]->MsgAreas_File для  файловых
 и почтовых соответственно. Все настройки подробно описаны внутри самих
 файлов  конфигурации (в стандартной  поставке  это filearea.ctl и msg-
 area.ctl).

 7.12. Группы файловых и почтовых областей
 ─────────────────────────────────────────

    Группы же, в свою очередь, служат для объединения файловых и почто-
 вых областей по смыслу или  любым другим  нужным вам признакам.  Имена
 файлов  конфигурации   групп  задаются  параметрами  tornado.ctl->[Fi-
 les&Dirs]->FileGroups_File  и MsgGroups_File.  Все  настройки  описаны
 внутри этих файлов.

 7.13. Система новостей
 ──────────────────────

    Новости показываются пользователю при каждом входе после вопросов о
 поиске новых файлов и личной почты. В зависимости от значения парамет-
 ра tornado.ctl->[Miscellaneous]->Show_News будут  показаны все новости
 (Yes), только последние (Last) (бюллетени, добавленные после даты пос-
 леднего звонка пользователя) или же  не будут показаны вовсе (No). Для
 каждого языка сообщений параметром *.lng->[Files]->News можно задавать
 свой файл новостей. Его содержимое должно выглядеть следующим образом:

 = NEWS.TXT ===============
 13-10-97 10:25  <────────────────┐
                                  │
 Бюллетень <────────────────────┐ │
       новостей ...             │ │
                                │ │
 /***/     <──────────────────┐ │ │
 14-10-97                     │ │ │
                              │ │ │
 Текст                        │ │ │
   второго                    │ │ │
     бюллетеня                │ │ │
       новостей ...           │ │ │
                              │ │ │
 и т. д.                      │ │ │
 ==========================   3 2 1

 1 - Дата помещения блюллетеня на станцию (в формате, заданном парамет-
     ром tornado.ctl->[System]->DateMask. Для  более точного отслежива-
     ния появления бюллетеня на  станции можно указать время  написания
     (не обязательно).

 2 - Текст бюллетеня.

 3 - Разделитель.


 8. Встроенный язык написания сценариев
 ══════════════════════════════════════

    Tornado содержит встроенный язык программирования, на котором можно
 создавать т.н. сценарии (scripts) для  реализации  каких-либо дополни-
 тельных возможностей. Лексическая основа  языка состоит из секций, пе-
 ременных, команд и меток. Комментарии начинаются со слова "//".

    В программы на встроенном языке можно передавать параметры, которые
 прописываются в командах вызова скрипта следующим образом:
                D:\PATH\script.trs param1 param2 param3
 Доступ к этим параметрам осуществляется посредством команды GetArg.

 8.1. Секции
 ───────────

    Каждая программа на встроенном языке должна состоять из секций. Су-
 ществует два типа секций: секция  определения переменных и секция, со-
 держащая текст программы. Если наличие первой не обязательно и зависит
 от того, используете ли вы переменные, то последняя должна присутство-
 вать в программе обязательно. Описание каждой секции начинается с клю-
 чевого слова и заканчивается словом "End".

    Ключевые слова:

    Variables - секция описания переменных
    Program   - секция с текстом программы
    Procedure - секция описания подпрограммы (см. ниже)

 8.2. Переменные
 ───────────────

    Эффективное программирование  возможно только при  наличии аппарата
 временных переменных. Как было  отмечено ранее, переменные описываются
 в секции Variables следующим образом:

 ---------------------------------------
 Variables
   <имя_переменной>             : <тип>
   <переменная1>, <переменная2> : <тип>
 End
 ---------------------------------------

 Допустимые типы переменных во встроенном языке:

 String  - Строковый тип. Переменные  этого типа могут иметь своим зна-
           чением строку символов длиной не более 80 символов (полагаю,
           что этого достаточно). В строковых  переменных можно исполь-
           зовать  спецсимволы, номера которых  в ASCII-таблице  (перед
           ними ставится  символ "#") можно  перемежать с текстом самой
           строки. Например: S = #13"String"#27.

 Logical - Логический тип.  Переменные  этого типа могут  иметь одно из
           двух логических значений, соответствующих зарезервированным
           именам True (истинно) или False (ложно).

 Number  - Числовой тип. Значение типа Numberic - элемент  подмножества
           целых чисел в диапазоне от -2147483648 до 2147483647.

    Присваивание переменным каких-либо  значений производится с помощью
 оператора "=". Предложение  программы "A = 10" читается как "пусть те-
 кущее значение переменной A равно 10", или проще - "пусть A равно 10".
 В правой части оператора  присваивания может стоять  как явно заданное
 значение, так и выражение. Для  строковых типов  одно может  содержать
 строки символов, заключенные в кавычки (например: "Простая строка сим-
 волов"), а также  символы "+", означающие  слияние строк, и переменные
 строкового типа. Например, выражение вида '"User name: "+ $NAME' ($NA-
 ME - зарезервированная переменная, содержащая  имя пользователя, пусть
 ее  значение будет  равно "Konstantin Klyagin") будет преобразовано  в
 'User name: Konstantin Klyagin'. Для типа Number выражение может пред-
 ставлять собой формулу, содержащую простейшие операции "+" (сложение),
 "-"  (вычитание), "*" (умножение), "/"  или ":" (деление), "^" (возве-
 дение в  степень). Тип Logical, как  говорилось ранее, может принимать
 значения равные только True или False.

    Существует возможность определять  массивы переменных. Синтаксис их
 задания таков:

  <имя_переменной> [, <имя> ...] : <тип> Array [<количество элементов>]

 где <тип> - один из стандартных типов, а все остальное ясно и так ;)
 Обращение к элементу массива  производится путем указания  номера эле-
 мента (или математического выражения, из которого этот номер получает-
 ся) после имени массива + символ "#". Например: Arr#1 или Arr#i*j-5

    Переменные также делятся  на два типа: определенные пользователем и
 внутренние. Первые задаются  при написании  программы в секции Variab-
 les, а  вторые  присутствуют в программе изначально. Их  названия пол-
 ностью соответствуют названиям макросов (см. макросы). В командах при-
 своения могут участвовать все эти переменные, за исключением:

   $NAME  $PROD  $SYSO  $BBSN  $BAUD  $FARE
   $FGRP  $MARE  $MGRP  $TTME  $FNAM  $LNAM
   $LFKB  $OTME  $DLTK  $MSGP  $SELK  $SELN

 Их изменение из скрипт-программ не разрешается.

    Помимо макросов, в скрипт-языке  существуют другие  заранее опреде-
 ленные переменные. Вот их список:

 Системные
 ─────────

   ArgCount     = количество параметров, переданных в программу

 Конфигурационные (по сути, передают значения параметров конфигурации)
 ─────────────────────────────────────────────────────────────────────

   cfgPath        = tornado.ctl->[System]->Path
   cfgPort        = tornado.ctl->[Modem]->Port
   cfgLog         = tornado.ctl->[Files&Dirs]->LogFile
   cfgChatLog     = tornado.ctl->[Files&Dirs]->Chat_Log
   cfgTRCLog      = tornado.ctl->[Files&Dirs]->TRC_Log
   cfgTempDir     = tornado.ctl->[Files&Dirs]->TempDir
   cfgFlagsDir    = tornado.ctl->[Files&Dirs]->FlagsDir
   cfgDoorDir     = tornado.ctl->[Files&Dirs]->DoorInfoDir
   cfgLogo        = tornado.ctl->[Files&Dirs]->Logo
   cfgSaveTag     = tornado.ctl->[Files&Dirs]->Save_Tag_Path
   cfgPrivUL      = tornado.ctl->[Files&Dirs]->Priv_Uploads_Dir
   cfgLangDir     = tornado.ctl->[Files&Dirs]->LNG_Path
   cfgLangTxtPath = Текущий файл .lng->[Files]->TxtFiles
   cfgLangMnuPath = Текущий файл .lng->[Files]->Menus
   cfgLangNews    = Текущий файл .lng->[Files]->News

   [ Следующие параметры передают значения указанных  ]
   [ параметров для ТЕКУЩЕЙ файловой/почтовой области ]

   faDLPath     = filearea.ctl->[FileArea]->DLPath
   faULPath     = filearea.ctl->[FileArea]->ULPath
   faFileList   = filearea.ctl->[FileArea]->FileList

   maAddress    = msgarea.ctl->[MsgArea]->UseAddress
   maOrigin     = msgarea.ctl->[MsgArea]->Origin
   maBase       = msgarea.ctl->[MsgArea]->BaseType
   maPath       = msgarea.ctl->[MsgArea]->BasePath
   maBoard      = msgarea.ctl->[MsgArea]->BoardNum


 8.3. Команды
 ────────────

    Команды встроенного языка делятся на несколько групп: команды усло-
 вия, ввода-вывода и работы с текстовыми файлами. Все они должны распо-
 лагаться в  секции Program  по  принципу: одна строка - одна  команда.
 Чтобы поместить в одну строку несколько команд, вы можете использовать
 символ-разделитель ";", например:

 ---------------------------------------
 Program
   S = "test" ; WriteLn (S) ; Exit
 End
 ---------------------------------------

 Далее следует список команд.

 КОМАНДЫ УСЛОВИЯ
 ───────────────

 IF
    Параметр, который указывается через  пробел, может  быть логической
 переменной или выражением, и в зависимости от его значения выполняется
 последовательность команд, заданных либо  после команды If (если выра-
 жение истинно), либо  после Else (если  ложно). Команду можно записать
 сокращенно, не употребляя Else. Это  равносильно замене последователь-
 ности команд, следующих за Else, на пустоту. Else употребляется только
 в паре с  If. Заканчиваться  команда условия  должна  ключевым  словом
 "End".

    Как отмечалось ранее, выражения, стоящие после команды, могут  быть
 как простой (напр.: "If B") или  инвертированной  посредством операции
 "not" (напр.: "If Not B")  логической  переменной, так и  сравнениями.
 Строковые переменные вы можете проверять на равенство, применяя опера-
 ции "=" (равно) и "<>" (не равно). Например, S = "a" или S <> "a". Для
 числовых переменных, помимо проверки равенства, можно применять опера-
 ции ">" (больше чем) и "<" (меньше чем), а также комбинированные: ">="
 (больше или  равно)  и "<=" (меньше  или  равно). Допускается  задание
 нескольких таких выражений, заключенных в  скобки и объединенных логи-
 ческими операторами "and" (логич. "и") или "or" (логич. "или").
    Ниже для наглядности я приведу несколько примеров использования ко-
 манды IF:

 ───────────────────────┬────────────────────────┬─────────────────────
 If B Or (S = 'aaa')    │ If Not B               │ If N >= 10
   WriteLn ("истина")   │   WriteLn ("B-ложь")   │   WriteLn ("N>=10")
 Else                   │ Else                   │ Else
   WriteLn ("ложь")     │   WriteLn ("B-истина") │   WriteLn ("N<10")
 End                    │ End                    │ End
 ───────────────────────┴────────────────────────┴─────────────────────


 МАКРОПОДСТАНОВКА
 ────────────────

    Во встроенном языке Tornado имеется весьма интересная возможность -
 макроподстановка. Кто работал с  dBase-подобными  языками, тому хорошо
 известна эта идея, она заключается в следующем: произвольной строковой
 переменной можно  присвоить значение, являющее  собой команду встроен-
 ного языка, и тут же  выполнить эту команду, поставив перед именем пе-
 ременной специальный символ "&". Например:
 -------------------------------------
 S = "UserInfo " + "("#34"Konst"#34")"
 &S
 -------------------------------------
    В этом случае, в процессе выполнения программы в код будет подстав-
 лена команда UserInfo ("Konst"). Вместо  имени  переменной также можно
 подставлять выражения, например: &"UserInfo " + "("#34"Konst"#34")".


 КОМАНДЫ ЭКРАННОГО ВВОДА-ВЫВОДА
 ──────────────────────────────

 Clear
   Очистка экрана. Параметров нет.

 Write
   Вывод  выражения  или  значения  переменной на экран.  Параметр, за-
   дающийся  команде в скобках, может  содержать явно заданное значение
   или выражение  любого типа. Строка,  переданная в качестве параметра
   данной команде, может содержать макросы и цветовые последовательнос-
   ти. Пример использования: Write ("User name: " + $NAME)

 WriteLn
   Аналогично  команде Write, с тем лишь отличием, что по окончании вы-
   вода текста производится перенос строки.

 ReadVar
   Запрашивает ввод значения строковой или числовой переменной с клави-
   атуры. Принимает  на входе  два параметра, заключенных в скобки: имя
   переменной и максимальная длина строки ввода. Пример: ReadVar (S, 20)

 KeyPressed
   Проверяет, была ли нажата пользователем какая-либо клавиша, и, в за-
   висимости от  этого, устанавливает  значение логической  переменной,
   заданной в качестве параметра, в True или False соответственно.
   Например: KeyPressed (B), где B - переменная типа Logical.

 ReadKey
   Ожидает нажатия любой  клавиши и возвращает  результат в перемернную
   типа String, имя которой передается в качестве параметра. Специально
   для определения нажатия курсорных клавиш  введены константы keyb_Up,
   keyb_Down,  keyb_Left и  keyb_Right, а также  keyb_Home  и keyb_End,
   сравнивая с которыми результат команды ReadKey можно  определить на-
   жатия соответствующих клавиш.
   Пример: ReadKey (S)

 KeyMacro
   "Подбрасывает" в буффер ввода строку, переданную  единственным пара-
   метром. Например, вам нужно в программе после запуска DoorWay выпол-
   нить в нем какую-либо команду. Здесь вам пригодится данная команда:
   ----
   KeyMacro ("dir" + #13)
   DoorWay
   ----
   В этом примере сразу после  запуска DoorWay будет  выполнена команда
   оного dir.

 SetCursorCoord
   Устанавливает курсор  в заданную  позицию на  экране. Два параметра:
   координата по Y и по X. Пример: SetCursorCoord (10, 1)

 GetCursorCoord
   Возвращает текущую позицию курсора на  экране. В качестве параметров
   передаются две переменные, которым соответственно  будут присвоены X
   и Y координаты.

 SetColor
   Устанавливает цвет текста, который будет или  выведен командой Write
   и WriteLn, или введен  посредством  ReadVar. Параметры: цвет  фона и
   цвет текста. Оба параметра должны иметь тип Number.

   Возможные значения параметров цвета:

      0 - черный,
      1 - синий,
      2 - зеленый,
      3 - бирюзовый,
      4 - красный,
      5 - сиреневый,
      6 - коричневый,
      7 - серый,
      8 - темно-серый,
      9 - ярко-синий,
     10 - ярко-зеленый,
     11 - голубой,
     12 - ярко-красный,
     13 - розовый,
     14 - желтый,
     15 - белый.

   Пример использования: SetColor (0, 15)

 YesNo
   Запрос типа да/нет. Ждет от пользователя нажатия клавиши Y или N, и,
   в зависимости от ответа, устанавливает значение логической перемен-
   ной, заданной в качестве параметра, в True или False соответственно.
   Например: YesNo (B), где B - переменная типа Logical.

 NoYes
   Аналогична предыдущей, но если команда YesNo имеет умолчанием утвер-
   дительный [Y/n] ответ, то данная команда ожидает ответа [y/N].

 Message
   Выводит сообщение, заданное строковым параметром и ждет нажатия Enter.

 КОМАНДЫ ДЛЯ РАБОТЫ С ТЕКСТОВЫМИ ФАЙЛАМИ
 ───────────────────────────────────────

    В начале следует отметить, что каждый файл, с которым  работает Ваш
 сценарий,  обозначается  своим собственным  уникальным  номером. Номер
 файла  назначается Вами прямо в  скрипте первым параметром команды от-
 крытия  файла. Затем, при  использовании  других  файловых  команд, вы
 должны пользоваться  этими  номерами. К примеру, для  чтения строки из
 файла мы должны применить следующую последовательность команд:

 ---------------------------------------
 FileOpen (1, "C:\autoexec.bat")
 FileReadString (1, S)
 FileClose (1)
 ---------------------------------------

 Здесь мы  открываем файл C:\autoexec.bat  и  даем  ему номер  1. После
 этого, пользуясь номером, мы  считываем строку из файла в переменную S
 и закрываем файл.

 FileCreate
   Создает текстовый файл. Параметры: номер и имя создаваемого файла.
   Пример: FileCreate (1, "file.tst")

 FileAppend
   Открывает уже существующий файл для записи  строк в конец оного или,
   если файл не найден, создает его. Параметры: номер и имя файла.
   Пример: FileAppend (1, "file.tst")

 FileOpen
   Открывает файл для чтения. Параметры  те же, что и для двух предыду-
   щих команд.

 FileWriteString
   Записывает строку в  файл, открытый (или созданный) командой FileAp-
   pend или FileCreate. Параметры: номер файла и выражение для записи.
   Пример: FileWriteString (1, "Test string")

 FileReadString
   Читает строку из файла, открытого  командой FileOpen. Параметры: но-
   мер файла и переменная, в которую будет помещена считанная строка.
   Пример: FileReadString (1, S)

 FileGetToString
   Добирается до  строки с номером, указанным  вторым параметром, в за-
   данном первым параметром файле. Пример: FileGetToString (1, 10)

 FileGetEOF
   Возвращает, достигнут ли конец  считываемого файла. Параметры: номер
   файла и переменная типа Logical, куда будет заноситься результат.
   Пример: FileGetEOF (1, B)

 FileClose
   Закрывает файл. Принимает единственный  параметр - номер файла.
   Пример: FileClose (1)

 FileDelete
   Удаляет файл.
   Пример: FileDelete ("c:\autoexec.bat")

 FileExists (FName, B)
   Проверят наличие файла FName на диске и возвращает результат в Logi-
   cal-переменную, заданную вторым параметром.

 FileSize (FName, N)
   Возвращает размер  файла FName в  Number-переменную, заданную вторым
   параметром.

 FileDisplay
   Показывает .A?? файл. Параметром  служит имя, причем на него распро-
   страняются все правила задания имен .A?? файлов.
   Пример: FileDisplay ("TXTFILE\logo")


 КОМАНДЫ РАБОТЫ С ФАЙЛОВЫМИ ОБЛАСТЯМИ
 ────────────────────────────────────

 AddToDownLoadList ("name")
   Добавляет файл с указанным именем в список файлов, помеченных для
   скачивания. Пример: AddToDownLoadList ("C:\autoexec.bat")

 DownLoad
   Аналогично команде меню DownLoad. Необязательный параметр - имя
   файла.

 UpLoad
   Аналогично команде меню UpLoad. Необязательный параметр - каталог
   для принимаемых файлов.

 UpLoadPriv
   Аналогично команде меню UpLoad_Priv. Обязательный параметр - имя
   пользователя-получателя.

 ChangeFileArea
   Смена текущей файловой области. Параметров нет.

 ChangeFileGroup
   Смена текущей файловой группы. Параметров нет.

 FileList
   Показывает содержимое текущей файловой области.

 ShowRawDir
   Показывает список файлов в текущей файловой области без учета содер-
   жимого files.bbs (аналогично  команде dir, выполненной  в каталоге с
   файлами текущей области).

 GetFirstTagged
   Возвращает имя первого по номеру файла из  списка отмеченных пользо-
   вателем для скачивания. Единственный  параметр - имя String-перемен-
   ной, в которую это имя будет помещено.

 GetNextTagged
   Возвращает  имя следующего  отмеченного файла по  списку. Считывание
   списка начинается командой GetFirstTagged. Параметр - имя String-пе-
   ременной, в  которую будет занесен результат. Если был достигнут ко-
   нец списка, указанная переменная примет значение пустой строки.

 GlobalSearch
   Действие команды  аналогично  действию action'а меню  Global_Search.
   Единственный необязательный параметр - маска для  поиска. Если он не
   задан или  является пустой  строкой, пользователю  задается соответ-
   ствующий вопрос.

 NewFilesSince
   Организует поиск файлов, поступивших на BBS после указанной даты.
   Необязательный параметр - дата, УКАЗАННАЯ В ФОРМАТЕ
   tornado.ctl->[System]->Date_Mask. В случае если дата не задана, она
   будет запрошена у пользователя.

 NewFilesSinceLast
   Организует  поиск файлов, поступивших  со времени  последнего звонка
   пользователя на BBS. Параметров нет.

 КОМАНДЫ РАБОТЫ С ПОЧТОВЫМИ ОБЛАСТЯМИ
 ────────────────────────────────────

 ChangeMsgArea
   Смена текущей почтовой области. Параметров нет.

 ChangeMsgGroup
   Смена текущей почтовой группы. Параметров нет.

 FilePost
   Помещает  заданный файл в  текущую область  сообщений в виде  письма.
   Параметры: имя файла, от кого, к кому и тема.
   FilePost ("C:\somefile.txt", "Konst", "All", "Tornado")

 WriteMsg
   Предлагает  пользователю  написать  сообщение  в  почтовую  область,
   номер которой задан параметром команды, или же в  текущую, если этот
   параметр не указан.

 КОМАНДЫ ДЛЯ РАБОТЫ С INTERNET-СЕРВИСАМИ
 ───────────────────────────────────────

 Telnet
   Связывается с  другой  машиной посредством  сервиса Telnet. Необяза-
   тельный параметр - имя машины. Telnet ("localhost")

 ПРОЧИЕ КОМАНДЫ
 ──────────────

 GetArg (Num, Str)
   Возвращает в строковую переменную Str значение  параметра номер Num,
   переданного  в скрипт при вызове. Общее количество переданных в сце-
   нарий параметров хранится в переменной ArgCount.

 GetStringLength (Str, Num)
   Возвращает в числовую переменную Num длину строковой переменной Str.

 SubString (StrIn, FromPos, Count, StrOut)
   Возвращает в строковую  переменную StrOut значение подстроки, взятой
   из StrIn с позиции FromPos числом Count символов.

 StrPos (Sub, Str, Pos)
   Возвращает  в переменную  Pos типа  Number позицию  подстроки  Sub в
   строке Str.

 PrCase (Str)
 LoCase (Str)
 UpCase (Str)
   Возводят содержимое  строки Str в смешанный, нижний или  верхний ре-
   гистр соответственно.

 Val (Str, Num)
   Преобразовывает  строковый тип в  числовой. Результат - в переменной
   Num типа Number. Для обратного  преобразования можно воспользоваться
   прямым присвоением: Str = Num.

 Ord (Str, Num)
   Помещает в  Number-переменную Num ascii-код символа, содержащегося в
   строке Str.

 Delay (n)
   Организует задержку выполнения скрипта на n милисекунд.

 Random (Range, Out)
   Генерирует  случайное число  в диапазоне от 0 до Range и заносит ре-
   зультат в Number-переменную Out.

 UserInfo
   Показывает информацию о пользователе[ях], аналогично команде меню
   User_Info. Необязательный параметр - имя пользователя.

 PageSysOp
   Вызов СисОпа на  чат на тему, указанную первым параметром команды, а
   если не указана, тема запрашивается у пользователя.

 DoorWay
   Запускает встроенный DoorWay.

 Call
   Вызывает из программы на скрипт-языке  другой trs-файл, имя которого
   задается первым и единственным параметром.

 Log
   Записывает заданную строку в файл-протокол.

 Exec
   Запускает программу с заданной первым  параметром  командной строкой
   (можно  использовать макросы, как для команды меню Exec). Вторым па-
   раметром задается имя переменной типа  Number, в которую будет зане-
   сен код завершения вызванной программы (errorlevel).
   Пример: Exec ("vsys.exe *P *B", N)

 News
   Вызывает систему новостей. Без параметров.

 GoTo
   Безусловный переход к метке, имя которой задается через пробел после
   данной команды (см. "метки").

 HangUp
   Завершает работу пользователя и разрывает связь.

 Exit
   Завершение выполнение сценария.


 8.4. Метки
 ──────────

    Метки  представляют  собой удобный  механизм  безусловной  передачи
 управления из одной части программы в другую. Во встроенном языке мет-
 ки задаются  путем помещения в строку  их имени с двоеточием на конце,
 например:
 ...
 Label1:
 ...
    Чтобы передать управление последовательности команд, следующих сра-
 зу за данной меткой, используется команда GoTo.

 8.5. Подпрограммы
 ─────────────────

    Во встроенном языке есть  возможность создания  подпрограмм. Их ис-
 пользование бывает удобным, если в сценарии время от времени требуется
 вызывать часто повторяющуюся последовательность команд.
    Подпрограммы должны быть описаны  перед секцией Program и их описа-
 ние должно выглядеть следующим образом:

 Procedure <имя>
   <команда 1>
   <команда 2>
   < ... >
 End

 Из основной скрипт-программы  подпрограммы вызываются путем явного за-
 дания в нужном месте секции Program их имени:

 Program
   < ... >
   <имя_подпрограммы>
   < ... >
 End

 8.6. Зарезервированные имена файлов-сценариев
 ─────────────────────────────────────────────

    Файлы с  нижеперечисленными  именами  и  расширениями TRS  (ToRnado
 Script), находящиеся в каталоге, определенном параметром [Files]->Txt-
 Files текущего LNG-файла будут выполняться в следующих случаях:

 ───────────┬──────────────────────────────────────────────────────────
  Имя файла │ Когда выполняется
 ───────────┼──────────────────────────────────────────────────────────
       LOGO │ перед показом заставки
            │
    WELCOME │ до запроса на сканирование почтовых и файловых областей
            │
      START │ непосредственно перед показом стартового меню
            │
     LOGOFF │ при завершении пользователем  работы  с ббс путем выбора
            │ соответсвующего пункта меню
            │
    NEWUSER │ после положительного ответа на вопрос о начале регистра-
            │ ции нового пользователя
            │
     REGEND │ сразу по окончании регистрации нового пользователя
            │
    BADUSER │ при входе пользователя, внесенного в bad users list
            │
    GOODUSR │ при входе пользователя, внесенного в good users list
            │
     UPLOAD │ сразу после закачивания файла(ов) на BBS и их описания
            │
   DOWNLOAD │ сразу после скачивания файла(ов) с BBS
            │
   AFTERUPL │ после описания пользователем каждого закачаного файла, в
            │ качестве параметра в этот скрипт передается имя
            │ описываемого файла
            │
 ───────────┴──────────────────────────────────────────────────────────

 8.7. Поддержка REXX (только в версии под OS/2)
 ──────────────────────────────────────────────

    Tornado/2   дает   возможность   пользователям  писать  собственные
 скрипт-программы  на  языке REXX. В  них пока что  можно  использовать
 следующие  функции:  Clear,  Hangup, ChangeFileArea,  ChangeFileGroup,
 ChangeMsgArea, ChangeMsgGroup,  FileList, DoorWay, FileDisplay, Write,
 WriteLn,  AddToDownLoadList,  DownLoad,  Upload,  Message, UpLoadPriv,
 ShowRawDir, FilePost, WriteMsg, UserInfo, PageSysOp, ReadVar, KeyPres-
 sed, ReadKey,  SetCursorCoord,  SetColor и YesNo.  Параметры  для этих
 функций в большинстве  своем аналогичны параметрам  одноименных команд
 встроенного языка (глава 8.3). В случае удачного  завеpшения все функ-
 ции возвpащают '0', иначе '-1'. Исключение  составляют лишь KeyPressed,
 ReadKey и YesNo, котоpые вместо установки пеpеданной пеpвым паpаметpом
 пеpеменной в какое-либо  значение, помещают pезультат pаботы в возвpа-
 щаемое функцией  значение. И еще  одно замечание: функции,  в качестве
 паpаметpа котоpым должна быть пеpедана пеpеменная, в котоpую будет по-
 мещен  pезультат, должны  пpинимать  ее имя в  виде стpоки в одинаpных
 pексовских кавычках.

 Для чтения и установки значений макросов введены две функции:

 SetMacro( <macro_name>, <value> );
   Устанавливает значение  макроса <macro_name>, если, конечно, его из-
   менение разрешено, в <value>, иначе - возвращает '-1'.

 GetMacro( <macro_name> );
   Возвращает значение макроса <macro_name>, а если макрос с таким име-
   нем не существует, возвращает '-1'.

 Зарезервированные  имена  REXX-программ аналогичны именам  стандартных
 TRS-файлов (глава 8.6).  REXX-программы с  зарезервированными  именами
 должны иметь расширение TRX и находиться в каталоге, заданном парамет-
 ром .LNG->[Files]->TxtFiles.

    В качестве примера приведу  скрипт regend.trs, переписанный на Tor-
 nado REXX:

 = REGEND.TRX =========================================================

 Clear()
 OutFile = 'quest.txt'

 WriteLn( '\14Дополнительная регистрация дает Вам возможность поднять' )
 WriteLn( 'свой уровень доступа, ответив на несколько вопросов.' )
 WriteLn( )
 WriteLn( '\12Единственное, что от Вас требуется - отвечать правильно.' )
 WriteLn( )
 Write( '\10Вы хотите пройти дополнительную регистрацию?' )

 If YesNo() = '0' then exit

 WriteLn( )
 WriteLn( '\15Назовите три самых любимых Вами BBS' )
 Write( '\151: \03' )
 ReadVar( 'BBS1', 40 )
 Write( '\152: \03' )
 ReadVar( 'BBS2', 40 )
 Write( '\153: \03' )
 ReadVar( 'BBS3', 40 )
 WriteLn( )

 Write( '\15Должность (если работаете) или факультет/курс (если учитесь): \03' )
 ReadVar( 'Job', 27)
 WriteLn( )

 Write( '\15Вы занимаетесь программированием?')

 If YesNo() = '1' Then
 Do
   Write( '\15На каких языках Вы программируете? \03' )
   ReadVar( 'Languages', 40)
   WriteLn( )
 End

 Write( '\15Какую музыку вы любите слушать? \03' )
 ReadVar( 'Music', 40)

 rc = Stream( OutFile, 'C', 'OPEN write' )
 rc = LineOut( OutFile, '' )
 rc = LineOut( OutFile, 'Имя пользователя: 'GetMacro( '$NAME' ))
 rc = LineOut( OutFile, '' )
 rc = LineOut( OutFile, 'Любимые BBS:' )
 rc = LineOut( OutFile, '1) 'BBS1 )
 rc = LineOut( OutFile, '2) 'BBS2 )
 rc = LineOut( OutFile, '3) 'BBS3 )
 rc = LineOut( OutFile, 'Должность или Факультет/курс: 'Job )

 If Languages <> '' Then LineOut( OutFile, 'Программирует на: 'Languages )
 LineOut( OutFile, 'Музыка: 'Music )
 rc = Stream( OutFile, 'C', 'CLOSE' )

 If GetMacro( '$SECR' ) < 2 Then
 Do
   SetMacro( '$SECR', '2' )
   WriteLn( )
   Message( '\10Спасибо за ответы. Ваш уровень доступа поднят до 2.' )
 End

 =====================================================================

 9. Дополнительные возможности
 ═════════════════════════════

    Tornado также имеет достаточное количество дополнительных (сервис-
 ных) возможностей, делающих работу с BBS удобной и приятной.

 9.1. Встроенный DoorWay
 ───────────────────────

    Tornado имеет возможность осуществления удаленного доступа пользо-
 вателя  к  файловой системе  компьютера, на котором  установлена BBS.
 Вход в DoorWay осуществляется с помощью выбора пункта меню с действи-
 ем "DoorWay" (см.  настройка  меню). Из  соображений  безопасности  в
 DoorWay предусмотрено  довольно широкое  разделение  возможностей вы-
 полнения тех или иных команд для  пользователей с различными уровнями
 доступа. Файл настроек встроенного DoorWay называется doorway.ctl, он
 подробно откомментирован, так что на настройке я здесь останавливать-
 ся не буду.
    Список команд с их кратким  описанием вы сможете увидеть введя ко-
 манду HELP. Для того, чтоб узнать  параметры вызова конкретной коман-
 ды, достаточно запустить ее с параметром "/?".

 9.2. ManualSend (tm)
 ────────────────────

    Столкнувшись в других программах с неудобством посылки пользователю
 какого-то  определенного  файла, который не лежит ни  в одной файловой
 области, я  решил в  Tornado  облегчить СисОпу эту  задачу. Итак, если
 пользователь попросил у Вас какой-либо файл и хочет получить его прямо
 сейчас, сию минуту, то Вам, как СисОпу, не  нужно больше просить юзера
 подождать, жать Alt-J, копировать файл в специально отведенную область
 и т.д., достаточно  только  нажать PgUp, указать  каталог,  содержащий
 файлы, которые Вы хотели бы послать, клавишей Ins пометить их в окошке
 файлменеджера и нажать Enter. Все, файлы посланы!

 9.3. SaveTagList (tm)
 ─────────────────────

    Доводилось ли Вам  наблюдать, как  несчастный пользователь, пометив
 нужные ему файлы и начав  DownLoad, в следствие плохой связи слетает с
 линии, а при  последующем  входе он  бывает вынужден  пометить все эти
 файлы заново? Я решил, что  было бы гораздо  удобнее  сохранять список
 файлов с тем, чтобы при последующем  входе  пользователю не нужно было
 утруждать себя пометкой всех файлов заново и занимать этим время работы
 Вашей станции, да и свое тоже.
    Режим сохранения списка помеченных файлов (SaveTagList)  включается
 параметром  конфигурации  tornado.ctl->[Miscellaneous]->Save_Tag_List.
 Каталог, в котором будут лежать файлы-списки для каждого  пользователя
 задается параметром tornado.ctl->[Files&Dirs]->Save_Tag_Path. Эти фай-
 лы имеют имена, являющие собой CRC32 от имени пользователя в HEX-виде,
 и расширение .lst.

 9.4. Tornado upgrade manager (tm)
 ─────────────────────────────────

    Tornado upgrade manager предназначена для изменения  уровня доступа
 пользователям  по  каким-либо  знаменательным  событиям (10-й  звонок,
 100-й звонок, день рождения, день  освобождения Занзибара от чукотских
 оккупантов и т.п.) Вы можете указать условие, при  выполнении которого
 будет изменяться уровень (согласитесь, что будет  нехорошо, если поль-
 зователю, которому вы сами  дали уровень 10, в честь  его 10-го звонка
 уровень будет "повышен" до 2). Информировать пользователя об изменении
 уровня  можно  двумя  путями: с помощью  письма  или  вывода на  экран
 .ans/.asc/.avt файла. Изменять уровень можно как на сегодняшний, так и
 насовсем.
    Подробности о  настройке Tornado upgrade manager вы узнаете из под-
 робно откомментированного файла конфигурации upgrader.ctl.

 9.5. Registration Resume (tm)
 ─────────────────────────────

    Вспомните, как  обидно  бывает, когда при регистрации пользователь,
 ответив почти на все  вопросы, слетает с линии, а при последующем вхо-
 де ему приходится отвечать на все вопросы заново, потому что в прошлый
 раз он базу  занесен не был. Registration Resume  избавит Вас от такой
 проблемы: если пользователь  отвалится во время регистрации, то, войдя
 в следующий раз, он  продолжит  с того вопроса, на  котором  произошла
 потеря связи и без проблем  завершит регистрацию, не  утомляя ни себя,
 ни СисОпа ответами на одни и те же вопросы по нескольку раз.
    Данный режим включается  параметром конфигурации tornado.ctl->[New-
 Users]->Reg_Resume.

 9.6. Private uploads (tm)
 ─────────────────────────

    Позволяет пользователям обмениваться файлами  через BBS. Причем для
 этого им не нужно закачивать в  общедоступную область - файлы хранятся
 в специально отведенном каталоге, который  задается  параметром torna-
 do.ctl->[[Files&Dirs]]->Priv_Uploads_Dir и в конечном итоге скачает их
 только пользователь, которому они предназначались, после чего благопо-
 лучно стираются. Списки файлов  хранятся все в тех же .lst файлах, ко-
 торые располагаются в каталоге tornado.ctl->[Files&Dirs]->Save_Tag_Path.
 См. также действие меню Upload_Priv.


 10. Заключение (не тюремное ;)
 ══════════════════════════════

 10.1. Благодарности
 ───────────────────

    Автор программы  выражает свои благодарности  всем, кто  высказывал
 свои замечания и оказывал помощь в написании и тестировании, а особен-
 но нижеперечисленным фирмам, командам и людям:

   ■ Alex Radzishevskiy (2:461/113@fidonet.org) - один из  моих близких
     друзей и программист  Tornado Team.  Им написан оконный интерфейс,
     DoorWay и еще некоторые вещи.  Стоял  у  истоков создания Tornado,
     высказывал много полезных замечаний. [Tornado Team];

   ■ Vlad Bakaev (2:461/76@fidonet.org, dandy@tandik.ml.org). Он  также
     является моим другом и программистом Tornado Team,  написал модуль
     работы  с files.bbs  и обработку  текстовых  файлов  конфигурации.
     [Tornado Team];

   ■ Maxim  Lyashenko (2:461/585@fidonet.org). Автор  модуля  обработки
     макросов и  еще  некоторых вещей,  предназначенных  для работы  со
     строками. Активный тестер. [Tornado Team];

   ■ Maarten Bekers (2:285/233.5@fidonet.org,  elevator@wxs.nl).  Автор
     программы EleBBS. Давал много полезных  советов в процессе написа-
     ния версии Tornado для Win95/98/NT;

   ■ Boris Loboda (2:461/256@fidonet.org, barry@audit.kharkov.com).
     Здорово помог мне при написании Tornado для Win95/98/NT своими со-
     ветами, кусками кода и идеями;

   ■ Jack Lensky (2:461/686@fidonet.org). Активный тестер. [Tornado Te-
     am];

   ■ Dima Orlov (2:461/27@fidonet.org,  do@free.kpi.kharkov.ua).  Давал
     советы, высказывал замечания и  предложения  со дня написания Tor-
     nado и по сей день;  кроме того,  практически  все исходные тексты
     программы  были  набраны в чудесной  DOS-оболочке Connect (The IBM
     Handshaker), одним из авторов которой он является;

   ■ Alex Shakhajlo (2:461/700@fidonet.org) за проявленный интерес, ак-
     тивное тестирование еще с самых  первых версий, полезные  советы и
     замечания;

   ■ Alexey Solomonov (2:5030/142@fidonet.org) за любезно предоставлен-
     ные исходники и  чудесный мейлер  Sf-Mail, плагиатом с  интерфейса
     которого является оконный интерфейс Tornado ;). [Santa Fox Team];

   ■ Anton the Deinow (2:5030/143@fidonet.org) за любезно предоставлен-
     ные исходники своих  библиотек, активное тестирование  и  полезные
     советы по написанию. [Santa Fox Team];

   ■ Vladimir  Lazarenko  (2:461/106@fidonet.org,  vlad@sline.gtm.khar-
     kov.ua) за  тестирование и  перевод комментариев  в файлах  конфи-
     гурации на английский язык;

   ■ Oleg Deribas (2:461/13@fidonet.org) за активное тестирование и не-
     устанную  мыслительную  деятельность, направленную на придумывание
     новых возможностей  для Tornado и помощь автору в их реализации, а
     также на написание полезных утилит;

   ■ Peter Suchkow (2:5030/51@fidonet.org) за распространение программы
     в рамках проекта GSS; благодаря его поддержке  продукт получил ши-
     рокое  распространение не только в exUSSR, но и за пределами нашей
     многострадальной Родины;

   ■ Vadim  Vasilenko (2:461/81.44@fidonet.org) за  перевод  текстов по
     Tornado на английский язык и  за активное  тестирование со стороны
     юзера ;)

   ■ Roman Rupp (2:246/6010, rrupp@karlsruhe.netsurf.de) за перевод LNG
     и A??  файлов на  немецкий язык, активное  тестирование и полезные
     замечания;

   ■ TurboPower SoftWare, Async stuff;

   ■ Mark May & Vadim Rumyantsev, библиотека работы с базами сообщений;

   ■ Отдельное огромадное спасибо фирме Borland International за чудес-
     ное языковое средство  Borland Pascal 7.0 и за не  менее чудесный,
     но крайне тормозной на моем компьютере :(, компилятор Delphi;

   ■ Не менее  отдельное и не менее  огромадное  спасибо бывшему сооте-
     чественнику Виталию  Мирянову за отличный компилятор  Virtual Pas-
     cal, на котором была собрана версия Tornado для OS/2;

   ■ Ну и, конечно, спасибо мне, любимому ;)


 10.2. Условия распространения и ответственность автора
 ──────────────────────────────────────────────────────

    Данная версия программы является  unlimited shareware, основные по-
 ложения концепции которого изложены в лицензии (файл license.doc).

    Программа  распространяется  в  форме "как есть", в  соответствии с
 принципом "as is", общепринятым в международной  компьютерной  практи-
 ке. Это  означает, что если у вас в результате сбоев в  программе сго-
 рит винчестер, на кухне  взорвется газ, прорвет  канализацию, сосед по
 коммуналке  покончит  жизнь самоубийством, перестанет работать телеви-
 зор, холодильник  или зубная щетка, автор и  распространители  Tornado
 ответственности нести не будут. Вы используете программу на свой страх
 и риск.


 10.3. Поддержка программы
 ─────────────────────────

 Tornado распространяется в рамках проекта

 ─────────────────────────────────────■■■■■─────■■■■■────■■■■■──
 ──General───────────────────────────■─────────■────────■───────
 ──────────Software─────────────────■──■■■──────■■■──────■■■────
 ───────────────────Support────────■────■─────────■────────■────
 ──────────────────────────────────■■■■■─────■■■■■────■■■■■─────

    Свежие версии программы доступны  непосредственно у автора на Pulse
 BBS  (главная станция поддержки Tornado):

 Телефон      : [0572] 47-4765
 Время работы : 23:00-07:00
 BBS          : присутствует
 Фреки        : разрешены

    Время работы указано по киевскому времени. Если Вы являетесь членом
 сети FidoNet,  вы  можете  фрекнуть  последюю  бета-версию  по  алиасу
 TORNADO (версия под OS/2 - TORNADO2) или  альфа-версию по алиасу ALPHA
 (или ALPHA2).

    Если у Вас есть  доступ к сети InterNet, то  последнюю версию можно
 взять:

 ftp://tandik.cit-ua.net/support/tornado/
 ftp://rcat.com/bbs_software/tornado/
 ftp://andy.stat.burnet.ru/FIDO/TORNADO/

    Также рекомендую вам посетить www страничку:

 http://sun.nord.vostok.net/~konst/tornado/rus/

    В FIDO существует файлэха TORNADO, по которой распространяются пос-
 ледние версии и различные утилиты для Tornado.

    Поддержка Tornado в сети FidoNet производится в эхоконференции TOR-
 NADO.SUPPORT.

    Если Вы испытываете  непреодолимое желание  отблагодарить автора за
 его  работу, свяжитесь  со мной, и я с удовольствием  приму ее в любой
 форме.

 10.4. Автор
 ───────────

    Если у Вас появились какие-либо  замечания, идеи, деловые предложе-
 ния по поводу Tornado, у Вас  есть несколько возможностей связаться со
 мной:

 - Позвонить  голосом по телефону (0572) 474-765 в разумное  время (это
   домашний телефон, так что сначала следует позвать Константина);

 - Если Вы из  Харькова, то можете  прийти на т.н. "прулевку" - тусовку
   харьковских фидошников, которая  проходит на ул. Гоголя напротив ка-
   толической церкви (костела) у окошка, в котором продают пиво, каждый
   вторник в 18:00.

 - ICQ #17502151

 - Hаписать по сетевым адресам:

   2:461/22@fidonet.org
   81:461/22@os2net

   konst@adel.telecom.nov.ru
   konst@i.am
   Konstantin.Klyagin%p0.f22.n461.z2@fidonet.org

 - Написать обыкновенной почтой по адресу:

   310002, Украина,
   г. Харьков, ул. Фрунзе 11, кв. 11.
   Константину Клягину.


 10.5. Торговые марки
 ────────────────────

 Registered and unregistered trademarks:
 ─────────────────────┬───────────────────────────────────────────
  Tornado             │ Konstantin Klyagin & Tornado Team
  Upgrade manager     │ Konstantin Klyagin & Tornado Team
  SaveTagList         │ Konstantin Klyagin & Tornado Team
  ManualSend          │ Konstantin Klyagin & Tornado Team
  Registration Resume │ Konstantin Klyagin & Tornado Team
  RemoteAccess        │ Andrew Milner & Wantree Development Corp.
  Maximus             │ Scott Dudley
  Borland Pascal 7.0  │ Borland International, Inc.
  Sf-Mail             │ SantaFox Team
  T-Mail              │ Andy Elkin
  Fido, FidoNet       │ Tom Jennings and Fido Software
  OS/2                │ International Business Machines Corp.
  MS-DOS              │ MicroSoft Corp.
 ─────────────────────┴───────────────────────────────────────────
 